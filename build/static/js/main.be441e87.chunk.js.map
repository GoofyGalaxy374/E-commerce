{"version":3,"sources":["Components/images/hat.jpeg","Components/reducers.js","Components/store.js","Components/index.js","Components/cart.js","App.js","serviceWorker.js","index.js","Components/images/mouse.jpg","Components/images/keyboard.jpg","Components/images/figures.jpg","Components/images/RazerCynosa.jpg","Components/images/RazerBlackWidow.jpg","Components/images/RazerDeathStalker.jpg","Components/images/RazerHuntsmanElite.jpg","Components/images/RazerDeathAdderV2.jpg","Components/images/RazerBasiliskX.jpg","Components/images/RazerViperMini.jpg","Components/images/RazerNagaPro.jpg","logo.svg"],"names":["module","exports","reducer","state","productsInCart","action","type","name","price","image","id","updatedCart","index","indexOf","product","splice","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","logger","persistor","persistStore","this","props","productsList","RazerKeyboard","RazerBlackWidow","RazerDeathStalker","RazerHuntsmanElite","RazerViperMini","RazerDeathAdderV2","RazerBasiliskX","RazerNagaPro","Navbar","className","variant","NavbarBrand","Nav","NavItem","NavLink","href","size","length","Carousel","Item","src","mouse","Caption","keyboard","figures","map","Button","onClick","dispatch","addProduct","Component","connect","cart","App","exact","path","component","Index","Cart","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.be441e87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hat.a0286dd7.jpeg\";","import React from 'react'\r\nimport $ from 'jquery'\r\nimport uuid from 'uuid/v4'\r\nconst reducer = (state={productsInCart:[{}]}, action)=>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case 'addToCart':\r\n            return{\r\n                \r\n                ...state,\r\n                productsInCart: [...state.productsInCart, {name: action.name, price: action.price, image: action.image, id: action.id }]            \r\n            }\r\n            \r\n        case 'clearCart':\r\n            return{\r\n                ...state,\r\n                productsInCart: []   \r\n            }\r\n        case 'removeProduct':\r\n            let updatedCart = [...state.productsInCart]\r\n            let index = updatedCart.indexOf(product=>product.id===action.id)\r\n            if(index>=0 || index>=-1)\r\n            {\r\n                updatedCart.splice(index,1)\r\n            }\r\n            return{\r\n                ...state,\r\n                productsInCart: updatedCart\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default reducer;","import {persistStore, persistReducer} from 'redux-persist'\r\nimport {createStore, applyMiddleware} from 'redux'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport reducer from './reducers'\r\nimport logger from 'redux-logger'\r\n//persistConfig\r\nconst persistConfig = {\r\n    key: 'root', \r\n    storage,\r\n}\r\n//logger\r\n\r\n//persistStore\r\nexport const persistedReducer = persistReducer(persistConfig, reducer)\r\n//persistReducer\r\nexport const store = createStore(persistedReducer,applyMiddleware(logger))\r\nexport const persistor = persistStore(store)\r\n//persistor\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {store} from './store'\r\nimport {Button, Nav, Navbar, NavbarBrand, NavItem, NavLink, Carousel} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {MdShoppingBasket, MdAddShoppingCart} from 'react-icons/md'\r\nimport './index.css'\r\nimport uuid from 'uuid/v4';\r\nimport hat from './images/hat.jpeg';\r\nimport mouse from './images/mouse.jpg';\r\nimport keyboard from './images/keyboard.jpg';\r\nimport figures from './images/figures.jpg';\r\nimport RazerKeyboard from './images/RazerCynosa.jpg'\r\nimport RazerBlackWidow from './images/RazerBlackWidow.jpg'\r\nimport RazerDeathStalker from './images/RazerDeathStalker.jpg'\r\nimport RazerHuntsmanElite from './images/RazerHuntsmanElite.jpg'\r\nimport RazerDeathAdderV2 from './images/RazerDeathAdderV2.jpg'\r\nimport RazerBasiliskX from './images/RazerBasiliskX.jpg'\r\nimport RazerViperMini from './images/RazerViperMini.jpg'\r\nimport RazerNagaPro from './images/RazerNagaPro.jpg'\r\n\r\nclass index extends Component {\r\n    render() {        \r\n        const {productsInCart} = this.props;\r\n        const productsList = [\r\n            {\r\n                name: 'Razer Cynosa Chroma RGB',\r\n                price: 59, \r\n                image: RazerKeyboard,\r\n                id: 0\r\n            },\r\n            {\r\n                name: 'Razer Black Widow X Chroma',\r\n                price: 199, \r\n                image: RazerBlackWidow,\r\n                id:1\r\n            },\r\n            {\r\n                name: 'Razer Death Stalker Chroma',\r\n                price: 149, \r\n                image: RazerDeathStalker,\r\n                id:2\r\n            },\r\n            {\r\n                name: 'Razer Death Stalker Chroma',\r\n                price: 199, \r\n                image: RazerHuntsmanElite,\r\n                id:3\r\n            },\r\n            {\r\n                name: 'Razer Viper Mini ',\r\n                price: 29, \r\n                image: RazerViperMini,\r\n                id:4\r\n            },\r\n            {\r\n                name: 'Razer DeathAdder',\r\n                price: 199, \r\n                image: RazerDeathAdderV2,\r\n                id:5\r\n            },\r\n            {\r\n                name: 'Razer Basilisk X',\r\n                price: 159, \r\n                image: RazerBasiliskX,\r\n                id:6\r\n            },\r\n            {\r\n                name: 'Razer Naga Pro',\r\n                price: 149, \r\n                image: RazerNagaPro,\r\n                id:7\r\n            },\r\n\r\n            \r\n\r\n        ]\r\n        const addProduct=(product)=>\r\n        {\r\n            store.dispatch({type: 'addToCart', name: product.name, price: product.price, image: product.image, id: product.id})\r\n        }\r\n        return (\r\n            <div>\r\n                <Navbar className ='navbar' variant='light'>\r\n                    <NavbarBrand>Home</NavbarBrand>\r\n                    <Nav className='ml-auto'>\r\n                        <NavItem>\r\n                            <NavLink href='/cart'>\r\n                                <span className='cartIndicator'><MdShoppingBasket size={25}></MdShoppingBasket>\r\n                                <span>{productsInCart.length}</span></span>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Navbar>\r\n                <div className='carouselWrapper'>\r\n                    <Carousel>\r\n                        <Carousel.Item>\r\n                            <img src={mouse} className='carouselImage'></img>\r\n                            <Carousel.Caption>\r\n                                <h3>Gaming Mouses</h3>\r\n                                <p><strong>Get the best gaming mouses on the market!</strong></p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                        <Carousel.Item>\r\n                            <img src={keyboard} className='carouselImage'></img>\r\n                            <Carousel.Caption>\r\n                                <h3>Gaming keyboards</h3>\r\n                                <p><strong>Find the keyboard that suits your gaming style the most!</strong></p>\r\n\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                        <Carousel.Item>\r\n                            <img src={figures} className='carouselImage'></img>\r\n                            <Carousel.Caption>\r\n                                <h3>Video Game Accessories</h3>\r\n                                <p><strong>Decorate your environment with the best gaming accessories!</strong></p>\r\n\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                    </Carousel>\r\n                </div>\r\n\r\n                {productsList.map((product, id)=>\r\n                \r\n                        <div className='productShow'>\r\n                            <h3 className='productName'>{product.name}</h3>\r\n                            <img className='productImage' src={product.image}></img>\r\n                            <p className='productPrice'><strong>$ {product.price}.99</strong></p>\r\n                            <Button  className='addProductButton' variant='success' onClick={()=>addProduct(product, id)}> <MdAddShoppingCart size={20}></MdAddShoppingCart> <strong>Add to cart </strong> </Button>\r\n                        </div>\r\n                    )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps=(state={productsInCart: [{}]})=>\r\n{\r\n    return{\r\n        productsInCart: state.productsInCart\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(index);","import React, { Component } from 'react';\r\nimport {Button, Nav, Navbar, NavbarBrand, NavItem, NavLink, Alert} from 'react-bootstrap'\r\nimport {MdHome, MdCancel} from 'react-icons/md'\r\nimport {connect} from 'react-redux'\r\nimport {store} from './store'\r\nimport './cart.css'\r\nimport $ from 'jquery'\r\nimport uuid from 'uuid/v4'\r\nclass cart extends Component {\r\n    render() {\r\n        let total = 0\r\n        const {productsInCart} = this.props;\r\n        const clearCart=()=>\r\n        {\r\n            store.dispatch({type: 'clearCart'})\r\n        }\r\n        const removeProduct=(id)=>\r\n        {\r\n            store.dispatch({type:'removeProduct', id: id})\r\n            \r\n        }\r\n        const hideAlert=(id)=>\r\n        {\r\n            $('.' + id.toString()).fadeOut()\r\n\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <Navbar variant='light' >\r\n                    <NavbarBrand>Your cart</NavbarBrand>\r\n                    <Nav className='ml-auto'>\r\n                        <NavItem>\r\n                            <NavLink className='homeLink'href='/home'>\r\n                                <MdHome size={25}></MdHome>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Navbar>\r\n                {productsInCart.map((product, index)=>\r\n                \r\n                <div className='productsCartList'>\r\n                    <div className='productCartShow'>\r\n                        <h3 className='productCartName'>{product.name}</h3>\r\n                        <img className='productCartImage'src={product.image}></img>\r\n                        <p className='productCartPrice'><strong>PRICE: $ {product.price}.00</strong></p>\r\n                        <Button className='removeProductButton'variant='danger'><strong onClick={()=>removeProduct(index)}>Remove product</strong></Button>\r\n                    </div>\r\n\r\n                </div>)}\r\n                <Button className='clearCartButton' variant='warning' onClick={()=>clearCart()}><strong>Clear Cart</strong></Button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\nconst mapStateToProps=(state={productsInCart: [{}]})=>\r\n{\r\n    return{\r\n        productsInCart: state.productsInCart\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(cart);","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Index from './Components/index'\nimport {PersistGate} from 'redux-persist/integration/react'\nimport {store} from './Components/store'\nimport {Provider} from 'react-redux'\nimport {persistor} from './Components/store'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Cart from './Components/cart'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <PersistGate persistor ={persistor}> \n        <Router>\n          <Switch>\n              <Route exact path='/Home' component={Index}></Route>\n              <Route path='/cart' component={Cart}></Route>\n\n          </Switch>     \n        </Router>\n        </PersistGate>\n      </Provider>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n    <App />,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mouse.c51ae15a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/keyboard.9a681f61.jpg\";","module.exports = __webpack_public_path__ + \"static/media/figures.6038f9c3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RazerCynosa.3c10fc5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RazerBlackWidow.81be81d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RazerDeathStalker.9efd30f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RazerHuntsmanElite.e763b2a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RazerDeathAdderV2.7ee26305.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RazerBasiliskX.3ee6bc22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RazerViperMini.5c4bd18a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RazerNagaPro.c1b642ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}